@* @model IEnumerable<ShopManager.Areas.Admin.Models.ProductAdmin> *@
@model ShopManager.Areas.Admin.Models.ProductAdminModel_Category

@{
    ViewData["Title"] = "Index";
}

<h1>Product</h1>

<!-- Alert Success Start -->
@if (!string.IsNullOrWhiteSpace(TempData["SuccessMessage"]?.ToString()))
{
    <div class="w-100 d-flex justify-content-end">
        <div class="alert alert-success alert-dismissible fade show w-50 r-0" role="alert" id="alert_error">
            <strong>Success!</strong> @TempData["SuccessMessage"]?.ToString()
            <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close">
            </button>
        </div>
    </div>
}
<!-- Alert Success End -->
<!-- Alert Error Start -->
@if (!string.IsNullOrWhiteSpace(TempData["ErrorMessage"]?.ToString()))
{
    <div class="w-100 d-flex justify-content-end">
        <div class="alert alert-danger alert-dismissible fade show w-50 r-0" role="alert" id="alert_error">
            <strong>Error!</strong> @TempData["ErrorMessage"]?.ToString()
            <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close">
            </button>
        </div>
    </div>
}
<!-- Alert Error End -->

<div class="d-flex justify-content-between align-items-center">
    <!-- Form Filter-->
    <div>

        <div class="d-flex align-items-center">
            <!-- Filter by Category-->
            <div class="dropdown">
                <button class="btn  dropdown-toggle align-items-start" type="button" id="dropdownMenuButton"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                        style="border: 1px solid grey; width: 180px">
                    Filter by Categories
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <!-- All -->
                    <a class="dropdown-item"
                       asp-area="Admin" asp-controller="ProductAdmin"
                       asp-action="Index" asp-route-idCategory="">All</a>
                    <!-- Filter with Category-->
                    @foreach (var categoryItem in Model.categories)
                    {
                        <a class="dropdown-item"
                           asp-area="Admin" asp-controller="ProductAdmin"
                           asp-action="Index" asp-route-idCategory="@categoryItem.Id">@categoryItem.Title</a>
                    }
                </div>
            </div>

            <!-- Search-->
            <form asp-area="Admin" asp-controller="ProductAdmin" asp-action="index" asp-route-idCategory="@ViewData["IdCategory"]">
                <div class="d-flex align-items-center ms-4"
                     style="height: 40px;  border-radius:5px; border: 1px solid grey; overflow:hidden">
                    <input type="text" id="text_search_productAdmin" name="SearchString" placeholder="Search by key" value="@ViewData["CurrentFilter"]"
                           style="height: 36px; width: 300px; border:none; padding: 10px;" />
                    <a id="clear_search_productAdmin" asp-action="index" style="visibility :hidden; padding: 4px 10px 4px 10px; ">
                        <i class="bi bi-x-lg" style="color:black"></i>
                    </a>
                </div>
            </form>
        </div>

    </div>

    <!-- Button Create New-->
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
</div>



<table class="table">
    <thead>
        <tr>
            <th style="width:50px">
                <a asp-controller="ProductAdmin" asp-action="Index"
                   asp-route-idCategory="@ViewData["IdCategory"]"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-sortOrder="@ViewData["IdSortParm"]"
                   class="d-flex">
                    #ID
                    @if (ViewData["SortColumn"]!.ToString() == "")
                    {
                        <span>&darr;</span>
                        // mũi tên đi xuống
                    }
                    @if (ViewData["SortColumn"]!.ToString() == "id_desc")
                    {
                        <span>&uarr;</span>
                        // mũi tên đi lên
                    }
                </a>
            </th>
            <th>
                <a asp-controller="ProductAdmin" asp-action="Index"
                   asp-route-idCategory="@ViewData["IdCategory"]"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-sortOrder="@ViewData["TitleSortParm"]" class="d-flex">
                    Title
                    @if (ViewData["SortColumn"]!.ToString() == "title")
                    {
                        <span>&uarr;</span>
                    }
                    @if (ViewData["SortColumn"]!.ToString() == "title_desc")
                    {
                        <span>&darr;</span>
                    }
                </a>
            </th>
            <th>
                Content
            </th>
            <th>
                Image
            </th>
            <th>
                <a asp-controller="ProductAdmin" asp-action="Index"
                   asp-route-idCategory="@ViewData["IdCategory"]"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-sortOrder="@ViewData["PriceSortParm"]" class="d-flex">
                    Price
                    @if (ViewData["SortColumn"]!.ToString() == "price")
                    {
                        <span>&uarr;</span>
                    }
                    @if (ViewData["SortColumn"]!.ToString() == "price_desc")
                    {
                        <span>&darr;</span>
                    }
                </a>
            </th>
            <th style="width:70px">
                <a asp-controller="ProductAdmin" asp-action="Index"
                   asp-route-idCategory="@ViewData["IdCategory"]"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-sortOrder="@ViewData["RateSortParm"]" class="d-flex">
                    Rating
                    @if (ViewData["SortColumn"]!.ToString() == "rate")
                    {
                        <span>&uarr;</span>
                    }
                    @if (ViewData["SortColumn"]!.ToString() == "rate_desc")
                    {
                        <span>&darr;</span>
                    }
                </a>
            </th>

            <th>
                Category
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProductAdmins)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    <span style="line-height:1.5rem; height:4.5rem; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;  overflow: hidden;">
                        @Html.DisplayFor(modelItem => item.Content)
                    </span>
                </td>
                <td>
                    <img src="~/images/sanpham/@item.Img" class="img-fluid " style="width:100px; height: 60px; object-fit:contain" />
                </td>
                <td>
                    @item.Price.ToString("#,##0 VND")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryTitle)
                </td>
                <td>
                    <div class="d-flex align-items-center">
                        <a asp-controller="productAdmin" asp-action="Edit" asp-route-id="@item.Id" class="btn me-1">
                            <i class="bi bi-pencil-fill"></i>
                        </a>

                        <div class="dropdown">
                            <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="bi bi-three-dots-vertical"></i>
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a asp-controller="productAdmin" asp-action="Details" asp-route-id="@item.Id"
                                   class="dropdown-item">
                                    <i class="bi bi-eye"></i> Preview
                                </a>
                                <a asp-controller="productAdmin" asp-action="Delete" asp-route-id="@item.Id" 
                                class="dropdown-item" >
                                    <i class="bi bi-trash"></i> Detele
                                </a>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>


</table>
<br />
<!-- Pagination Start-->
<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        <!--Button Previous-->
        @if (Model.CurrentPageIndex > 1)
        {
            <a asp-controller="ProductAdmin" asp-action="index"
               asp-route-idCategory="@ViewData["IdCategory"]"
               asp-route-page="@(Model.CurrentPageIndex -1)"
               asp-route-searchString="@ViewData["CurrentFilter"]"
               asp-route-sortOrder="@ViewData["SortColumn"]"
               class="btn btn-outline-dark mx-2">
                &laquo;
            </a>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            @if (i != Model.CurrentPageIndex)
            {
                <a asp-controller="ProductAdmin" asp-action="index"
                   asp-route-idCategory="@ViewData["IdCategory"]"
                   asp-route-page="@i"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   asp-route-sortOrder="@ViewData["SortColumn"]"
                   class="btn btn-outline-dark mx-2">
                    @i
                </a>
            }
            else
            {
                //Current Page
                <a class="btn btn btn-outline-dark active mx-2">@i</a>
            }
        }
        <!-- Button Next -->
        @if (Model.PageCount != Model.CurrentPageIndex)
        {
            <a asp-controller="ProductAdmin" asp-action="index"
               asp-route-idCategory="@ViewData["IdCategory"]"
               asp-route-page="@(Model.CurrentPageIndex + 1)"
               asp-route-searchString="@ViewData["CurrentFilter"]"
               asp-route-sortOrder="@ViewData["SortColumn"]"
               class="btn btn-outline-dark mx-2">
                &raquo;
            </a>
        }
    </div>
</div>
<!-- Pagination End-->
@{
    string textButtonFilter = "Filter by Categories";

    @foreach (var categoryItem in Model.categories)
    {
        if (categoryItem.Id == Convert.ToInt16(@ViewData["IdCategory"]))
        {
            textButtonFilter = categoryItem.Title;
        }
        else
        {
            // Console.WriteLine(categoryItem.Id + "  " + Convert.ToInt16(@ViewData["IdCategory"]));
        }
    }
}

<script>
    var textButton = "@Html.Raw(textButtonFilter)";

    document.getElementById("dropdownMenuButton").innerText = textButton;

    // ============Show/Hidden button clear text Search =================
    const textSearch = document.getElementById('text_search_productAdmin');
    const btnClear = document.getElementById('clear_search_productAdmin');

    textSearch.addEventListener('input', function (e) {
        const text = e.target.value;
        if (text.trim() == "") {
            btnClear.style.visibility = "inline";
        } else {
            btnClear.style.visibility = "visible";
        }
    });

    // ------------- Auto Close Alert ----------------
    const alert_error = document.getElementById("alert_error")
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 2000);
</script>

<style>
    input:focus{
        border: 0px solid white;
        /* background-color:pink */
    }

    *, ::after, ::before {
        box-sizing: unset;
    }
</style>
